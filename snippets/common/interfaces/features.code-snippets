{
  "CanActivate Interface": {
    "prefix": [
      "ns_class_guard",
      "class Guard",
      "implements CanActivate"
    ],
    "scope": "typescript",
    "body": [
      "import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';",
      "import { Observable } from 'rxjs';",
      "",
      "@Injectable()",
      "export class $1Guard implements CanActivate {",
      "  canActivate(",
      "    context: ExecutionContext,",
      "  ): boolean | Promise<boolean> | Observable<boolean> {",
      "    const request = context.switchToHttp().getRequest();",
      "    return $0;",
      "  }",
      "}",
      ""
    ]
  },
  "NestInterceptor Interface": {
    "prefix": [
      "ns_class_interceptor",
      "class Interceptor",
      "implements NestInterceptor"
    ],
    "scope": "typescript",
    "body": [
      "import { Injectable, NestInterceptor, ExecutionContext, CallHandler } from '@nestjs/common';",
      "import { Observable } from 'rxjs';",
      "import { tap } from 'rxjs/operators';",
      "",
      "@Injectable()",
      "export class $1Interceptor implements NestInterceptor {",
      "  intercept(context: ExecutionContext, next: CallHandler): Observable<any> {",
      "    return $0;",
      "  }",
      "}",
      ""
    ]
  },
  "PipeTransform Interface": {
    "prefix": [
      "ns_class_pipe",
      "class Pipe",
      "implements PipeTransform"
    ],
    "scope": "typescript",
    "body": [
      "import { PipeTransform, Injectable, ArgumentMetadata } from '@nestjs/common';",
      "",
      "@Injectable()",
      "export class $1Pipe implements PipeTransform {",
      "  transform(value: any, metadata: ArgumentMetadata) {",
      "    return $0;",
      "  }",
      "}",
      ""
    ]
  }
}
